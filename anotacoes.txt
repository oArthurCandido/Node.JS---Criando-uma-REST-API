O que é uma REST API?

API é uma aplicação que permite integração de diferentes sistemas, padronizando a comunicação desses.

REST é um conjunto de convensões arquiteturais que utiliza algumas camadas HTTP para envio e recebimento de informações.

REST API, é uma aplicação que segue determinada convensão.

O que é RESTfull?

É um sistema que segue todas as boas práticas do REST. Isso envolve seguir padrões para definição de recursos, status de resposta, cache. codificação dos dados, forma de envio e de recebimento entre outra coisas.

O que é um recurso?

Case:

Jornalista posta no painel administrativo, tagueando as notícias e o usuário acessa um portal que permite ler essas notícias filtrando por tags.
A API conecta o painel administrativo ao banco de dados e o banco de dados ao portal acessado pelo usuário.
O recurso pode ser percebido através dos personagens desse case, no caso o jornalista, a tag(categoria) da notícia e a notícia em si.
Nesse case, serão agrupados os recursos tag e notícia, para que o usuário possa solicitar a cetegoria de notícias e receba as notícias desejadas.

Representação dos recurso no padrão REST:

site/jornalistas
site/categorias
site/categorias/{categoria_id}/noticias

O que é coleção?

Coleção é um agrupamento de recursos.

/jornalistas
Terei a coleção de jornalistas

/categorias
Terei a coleção de categorias

/categorias/{categoria_id}/noticias
Terei a coleção de notícias categorizadas

O que é um elemento?

Elemento se refere a um item específico da minha coleção.

/jornalistas/{jornalista_id}

Terei umm jornalista específico

/categorias/{categoria_id}

Terei uma categorias específica

O que é um sub-elemento?

Sub-elemento é um item específico dentro de outro item que abarca vários itens, como a categoria abarca notícias.

/categorias/{categoria_id}/noticias/{noticia_id}
Terei uma notícia específica que está dentro de uma categoria específica.

O que são endpoints?

Para definir endpoint precisamos definir os dados necessários para um sistema se comunicar com uma API.

Protocolo: HTTP ou HTTPS?
Host: api.site.com.br - Dominio
Path: /categorias/noticias - Caminho

Endpoint é a junção de todas essas informações, ou seja, ele é o endereço específico de determinado recurso na API.

Estrutura de endpoint

protocolo://dominio/nome-da-api/versao/caminho/do/recurso
https://api.site.com/news-api/v1/categorias/1/noticias/5

Métodos REST
Revisão dos verbos e suas utilidades

GET: Envio de parâmetros via URL, recebimento de informações no corpo da resposta. Usado para consulta de registros e busca de informação.

POST: Envio de parâmetros via corpo, recebimento de nformações no corpo da resposta. Usado para criar registros e enviar informações.

PUT: Envio de parâmetros via URL e corpo, recebimento de informações no corpo da resposta. Utilizado para atualizar registros totalmente. enviar informações

DELETE: Envio de parâmetros via URL, recebimento de informações no corpo da resposta. Usado para excluir registros.

PATCH:Envio de parâmetros via URL, recebimento de informações no corpo da resposta. Usado para atualizar registros parcialmente.

OPTIONS:Envio de parâmetros via URL, recebimento de informações no cabeçalho da resposta. Usado para verificar quais métodos(verbos) estão disponíveis.

HEAD: Envio de parâmetros via URL, recebimento de informações no cabeçalho da resposta. Usado para pegar somente as informções de cabeçalho do registro.

Relação entre verbos e recursos/endpoints

Endpoint para buscar todas as notícias:

[GET] https://api.site.com.br/news-api/v1/categorias/1/noticias

Endpoint para criar uma nova notícia

[POST] https://api.site.com.br/news-api/v1/categorias/1/noticias

Endpoint para atualizar uma notícia - aqui não capturamos mais todas as notícias da categoria, pois não faria sentido atualizar diversas notícias de uma vez.

[PUT] https://api.site.com.br/news-api/v1/categorias/1/noticias/12

Endpoint para remover uma notícia, também é direcioanda a um elemento, pois a remoção de todos os registros não é segura.

[DELETE] https://api.site.com.br/news-api/v1/categorias/1/noticias/12


Versionamento

Atualizações serão necessárias ao longo do tempo e mudanças estruturais que podem quebrar o resultado da entrega da API devem ser inseridas em novas versões da aplicação sem que a versão anterior seja removida, permitindo que o usuário atualize o sistema antes que a versãoantiga saia do ar.

Exemplo:

Na api/v1/categorias o json era entregue assim:

{
  id:1,
  titulo: bablabla,
  conteudo: blablabla
}

Na api/v1/categorias o json era entregue assim:

{
  id_noticia:1,
  titulo: bablabla,
  conteudo: blablabla
}

Somente essa alteração quebraria a entrega do conteúdo deixando o usuário sem resultado.

Como é feita?

Em "branchs" diferentes tenho ambas versões rodando.

Status codes

O que são os status codes?
Padrão de 3 dígitos que indica o resultado da tentativa de tratar a requisição.

São divididos em 4 classes:
Informacioais(1xx), sucesso(2xx), redirecionamento (3xx), erro(cliente(4xx) servidor(5xx))

Clients não precisam saber cada um dos codes, mas as classes sim.

Documentação de referência para REST API:

https://restfulapi.net/

https://developer.mozilla.org/pt-BR/docs/Web/HTTP



